# Generated by Django 4.2 on 2023-05-14 13:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import products.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('title_en', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_nl', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_sv', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_uk', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_it', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_fr', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_de', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_zh_hant', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_pl', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'favourite',
                'verbose_name_plural': 'favourites',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/%Y-%m-%d/', verbose_name='image')),
                ('is_main', models.BooleanField(default=False, verbose_name='is main')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('description', products.fields.RichTextBleachField(max_length=10000, verbose_name='description')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='price($)')),
                ('is_archived', models.BooleanField(default=False)),
                ('is_sold', models.BooleanField(default=False)),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='pub date')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='products.category', verbose_name='—Åategory')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_nl', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_sv', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_uk', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_it', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_fr', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_de', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_zh_hant', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('title_pl', models.CharField(max_length=100, null=True, verbose_name='title')),
                ('name', models.SlugField(unique=True, verbose_name='name')),
                ('price', models.PositiveIntegerField(verbose_name='price($)')),
                ('description', models.TextField(max_length=500, verbose_name='description')),
                ('description_en', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_ru', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_nl', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_sv', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_uk', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_it', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_fr', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_de', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_zh_hant', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('description_pl', models.TextField(max_length=500, null=True, verbose_name='description')),
                ('stripe_id', models.CharField(default=None, max_length=50, null=True, verbose_name='stripe_id')),
            ],
            options={
                'verbose_name': 'promotion',
                'verbose_name_plural': 'promotions',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProductAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full', models.CharField(max_length=200, verbose_name='full address')),
                ('short', models.CharField(max_length=200, verbose_name='short address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('country_code', models.CharField(max_length=2, verbose_name='country code')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='latitude')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='longitude')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_addresses', to='products.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='promotions',
            field=models.ManyToManyField(blank=True, related_name='products', to='products.promotion', verbose_name='promotion types'),
        ),
    ]
